# import lib that we need
# Dataframe
import pandas as pd
from tabulate import tabulate

# vis plot
import matplotlib
matplotlib.use('TKAgg')
# import GUI

from tkinter import messagebox
from tkinter import *
from tkinter.ttk import *
from tkinter import ttk
import tkinter as tk
import png
#  import filedialog for gui save
from tkinter import filedialog
from PIL import ImageTk, Image
from backtesting import Backtest, Strategy
from backtesting.lib import crossover
from backtesting.test import SMA, GOOG , EURUSD

# import request and API
from yahoo_fin.stock_info import get_analysts_info
from yahoo_fin.stock_info import *
import yahoo_fin.stock_info as si
#get data

'''
ticker: case insensitive ticker of the desired stock/bond
start_date: date you want the data to start from (mm/dd/yyyy)
end_date: date you want the data to end (mm/dd/yyyy)
index_as_date: {True, False}. Default is true. If true then 
the dates of the records are set as the index, else they are returned as a separate column.
interval: {“1d”, “1wk”, “1mo”}. Refers to the interval to sample the data: “1d”= daily, “1wk”= weekly, “1mo”=monthly.
'''
# get_data(ticker, start_date = None, end_date = None, index_as_date = True, interval = “1d”)
data_amazon_weekly = get_data("amzn",start_date="12/26/2009",end_date="12/26/2022",index_as_date=True,interval="1wk")
#print(data_amazon_weekly)

# get multiple tickers
'''
ticker_list = ["amzn", "aapl", "ba"]
historical_datas = {}
for ticker in ticker_list:
    historical_datas[ticker] = get_data(ticker)
#print(historical_datas["amzn"])
'''
#######################################################################################################################

'''
# return all tickers name in dow
dow_list = si.tickers_dow()
print(dow_list)

dow_historical = {}
for tk_dow in dow_list:
    dow_historical[tk_dow] = si.get_data(tk_dow,start_date="07/20/2022",end_date="07/22/2022",
                                     index_as_date=True,interval="1d")
'''


#######################################################################################################################
'''
# get btc data
data_btc_day = get_data("KSM-USD",start_date="09/26/2014",end_date="07/26/2022",index_as_date=True,interval="1d")
print(data_btc_day)
'''

# crypto tickers
'''
crypto_tickers = "BTC-USD ETH-USD USDT-USD USDC-USD BNB-USD BUSD-USD XRP-USD ADA-USD SOL-USD DOGE-USD HEX-USD DAI-USD DOT-USD WTRX-USD MATIC-USD TRX-USD AVAX-USD SHIB-USD WBTC-USD STETH-USD LEO-USD YOUC-USD LTC-USD FTT-USD ETC-USD CRO-USD LINK-USD NEAR-USD ATOM-USD XLM-USD XMR-USD BCH-USD BTCB-USD ALGO-USD XCN1-USD APE3-USD VET-USD FLOW-USD MANA-USD ICP-USD SAND-USD FRAX-USD HBAR-USD XTZ-USD FIL-USD AXS-USD TUSD-USD THETA-USD EGLD-USD AAVE-USD WBNB-USD EOS-USD HNT-USD QNT-USD TONCOIN-USD BSV-USD USDP-USD KCS-USD OKB-USD BTT-USD MKR-USD HBTC-USD BTT2-USD ZEC-USD RUNE-USD FTM-USD MIOTA-USD XEC-USD USDN-USD KLAY-USD USDD-USD MV-USD GRT1-USD HT-USD NEO-USD CHZ-USD CRV-USD LUNA1-USD PAXG-USD DFI-USD GMT3-USD BAT-USD WAVES-USD STX-USD KSM-USD LRC-USD DASH-USD ZIL-USD ENJ-USD CAKE-USD FRTS-USD LDO-USD XAUT-USD CVX-USD FEI-USD AR-USD XEM-USD MINA-USD KAVA-USD"]
list_crypto_tickers = list(crypto_tickers.split(" "))
list_a = list_crypto_tickers
print(list_a)
print(list_crypto_tickers[0])
data_btc_day = get_data(list_crypto_tickers[0],start_date="09/26/2014",end_date="07/26/2022",index_as_date=True,interval="1d")
print(data_btc_day)
'''


'''
for ticker in list_a:
    historical_datas[ticker] = get_data(ticker,start_date="06/20/2022",end_date="06/22/2022",index_as_date=True,interval="1d")
    #print(ticker)
print(historical_datas['WBTC-USD'])
print(historical_datas['SOL-USD'])
print(historical_datas['XRP-USD'])
print("a")
'''

########################################################################################################################

# function input data name

from crypto_list_api_ticker_name import list_a
list_a_copy = list_a
def crypto_download_data(ticker):
    global list_a_copy
    data_downloaded = get_data(ticker,start_date="06/20/2021",end_date="06/22/2022",index_as_date=False,interval="1d")
    print(data_downloaded)
    crypto_download_data.dataframe = data_downloaded
    return crypto_download_data.dataframe

#crypto_download_data("XRP-USD")

#######
# function convert data from crypto_list_api_ticker_name and save as .CSV
# import pandas as pd

def crypto_data_to_file():
    df = pd.DataFrame(crypto_download_data.dataframe)
    df.drop(columns='ticker',inplace=True)
    df.rename(columns={'date':'Date','open':'Open','high':'High','low':'Low','close':'Close','adjclose':'Adjclose','volume':'Volume'},inplace=True)
    df.reset_index(drop=True,inplace=True)
    df.to_csv('raw_data.csv',index=False)


crypto_download_data("DOT-USD")
crypto_data_to_file()





